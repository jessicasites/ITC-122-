<html>
<head>
    <title>React App Demo</title>
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>
</head>

    <body>
        <div id="root"></div>
        <script type="text/babel">
    // define your sub components here
    const Employees = (props) => {
      return props.employees.map((employee) => {
        return <li>{employee.firstName}</li>
         
      });
    }  
            const ItemList = (props) => {
                const bullets = props.items.map((item) => {
                    return <li onClick={props.handleClick} key={item._id}>{item.lastName}</li>
                });
                return <ul>{bullets}</ul>
            }
            const ItemDetail = (props) => {
                return <div>
                    <h3>Details</h3>
                    <form>
                        Last name: <input onChange={props.handleEdit} type="text" name = "lastName" value={props.item.lastName || ''}/><br/>
                        First name: <input onChange={props.handleEdit} type="text" name = "firstName" value={props.item.firstName || ''}/><br/>
                        Start Date: <input onChange={props.handleEdit} type="text" name = "startDate" value={props.item.startDate || ''}/><br/>
                        Status: <input onChange={props.handleEdit} type="text" name = "status" value={props.item.status || ''}/>
                        </form>
                        <button onClick={props.handleClear}>Clear</button>
                        <button onClick={props.handleDelete}>Delete</button>
                    </div>

            }
                class App extends React.Component {
                constructor(props){
                    super(props);
                     // Set initial state using data from server application
                    this.state = {
                        items: {{{employees}}}, //provided from index.js for '/' path. 
                        currentItem: {} // current selected item
                    };
          this.selectItem = this.selectItem.bind(this);
          this.handleClear =this.handleClear.bind(this);
          this.handleEdit = this.handleEdit.bind(this);
          this.handleDelete = this.handleDelete.bind(this);
       }

   handleEdit (e){
       //console.log(e.target.name)
       //console.log(e.target.value)
       let newItem = this.state.currentItem;
       newItem[e.target.name] = e.target.value;
       this.setState({currentItem: newItem});
   }
       handleClear () {
           this.setState ({currentItem: {}})
       }
        handleDelete () {
           console.log('delete me')
          fetch(`/api/employee/${this.state.currentItem._id}`)
          .then((response) => {
              return response.json();
          })
           .then((result) => {
              console.log(result)
               //on success, remove deleted item from this.state.items
           })
           .catch(err => console.log(err))
       }

      selectItem(e) {
        console.log(e.target.innerText)
        const found = this.state.items.find((employee) => {
            return employee.lastName == e.target.innerText;
        });
        this.setState({currentItem: found});
        console.log(event.target.innerText);
        console.log(found);
      }
      
        render() {
        // render app UI elements
        return (
          <div>
              <h2>Employees</h2>   
          <ItemList items={this.state.items} handleClick={this.selectItem}/> 
          <hr />
          <ItemDetail 
          item={this.state.currentItem} 
          handleClear={this.handleClear}
          handleEdit={this.handleEdit}
          handleDelete={this.handleDelete}
         />
          </div>
          );
      }
    }
            ReactDOM.render(<App />, document.getElementById('root'));
        </script>
    </body>
</html>